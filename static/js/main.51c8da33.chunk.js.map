{"version":3,"sources":["Component/Rank/Rank.js","Component/ImageLinkForm/ImageLinkForm.js","Component/FaceRecognition/FaceRecognition.js","App.js","reportWebVitals.js","index.js"],"names":["Rank","name","entries","className","style","paddingTop","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","onClick","FaceRecognition","imageUrl","box","id","alt","src","width","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","value","density","enable","value_area","app","Clarifai","App","apiKey","onRouteChange","route","setState","isSignedIn","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","height","left_col","top_row","right_col","bottom_row","displayFaceBox","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","console","log","fetch","method","headers","body","JSON","stringify","user","json","count","Object","assign","catch","err","email","joined","this","params","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.51c8da33.chunk.js","sourcesContent":["import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <div>\n      <p className='f1 white' style={{paddingTop: '60px'}}> \n        {'Face Detector'}\n      </p>\n      <div className='white f3'  style={{paddingTop: '20px'}}>\n        {`Enter your image URL and press detect\\r`}\n      </div>\n      <div className='white f1'>\n        {entries}\n      </div>\n    </div>\n  );\n}\n\nexport default Rank;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <div className='center black'>\n        <div className='form center pa2 br2 black shadow-5'>\n          <input className='f4 pa2 w-70 center black' type='tex' onChange={onInputChange}/>\n          <button\n            className='center w-30 grow f4 link ph3 pv2 dib blakc'\n            onClick={onButtonSubmit}\n          >Detect</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceRecognition;","import './App.css';\n// import Navigation from './Component/Navigation/Navigation.js'\n// import Logo from './Component/Logo/Logo.js'\nimport Clarifai from 'clarifai';\nimport Rank from './Component/Rank/Rank.js'\nimport ImageLinkForm from './Component/ImageLinkForm/ImageLinkForm.js'\nimport FaceRecognition from './Component/FaceRecognition/FaceRecognition.js'\nimport Particles from 'react-particles-js';\nimport React, { Component } from 'react';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 300\n      }\n    }\n  }\n}\n\nconst app = new Clarifai.App({\n apiKey: '7db14df8944e48e6bf0924f3b892ca2c'\n});\n\nclass App extends Component { \n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  // loadUser = (data) => {\n  //   this.setState({user: {\n  //     id: data.id,\n  //     name: data.name,\n  //     email: data.email,\n  //     entries: data.entries,\n  //     joined: data.joined\n  //   }})\n  // }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        console.log('hi', response)\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n    <div className=\"App\">\n    <Particles className='particles'\n    params={particlesOptions} />\n      {/*<Navigation />*/}\n      <Rank />\n      <ImageLinkForm \n      onInputChange={this.onInputChange} \n      onButtonSubmit={this.onButtonSubmit}/>\n      <FaceRecognition box={box} imageUrl={imageUrl} />\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}